#!/bin/bash

calamari()
{
	d=$(pwd)
	# initialize database
	cd /opt/calamari/webapp/calamari
	../../venv/bin/python manage.py syncdb --noinput

	# set up calamari admin user
	../../venv/bin/python addadmin.py

	# allow apache access to all
	chown -R www-data.www-data /opt/calamari/webapp/calamari
	a2dissite 000-default
	a2ensite calamari.conf
	a2ensite graphite.conf
	a2enmod wsgi
	a2enmod proxy
	a2enmod proxy_http
	chown -R www-data:www-data /var/log/calamari
	cd $d
}

graphite_seed()
{
	# prerm
	# make a random 'SECRET_KEY' (really a crypto seed) for graphite
	APP_SETTINGS=/opt/graphite/webapp/graphite/app_settings.py
	# avoid if already there
	grep -s -q SECRET_KEY $APP_SETTINGS && return

	KEY=$(tr -dc _A-Z-a-z-0-9 < /dev/urandom | head -c50)
	echo "# key added by $0" >>$APP_SETTINGS
	echo "SECRET_KEY = \"$KEY\"" >>$APP_SETTINGS
}

graphite()
{
	d=$(pwd)
	cd /opt/graphite/webapp/graphite
	../../bin/python manage.py syncdb --noinput
	chown -R www-data:www-data /opt/graphite/storage
	chown -R www-data:www-data /var/log/graphite
	cd $d
}


carbon()
{
	d=$(pwd)
	cd /opt/graphite/conf
	if ! grep -q -s 'MAX_CREATES_PER_MINUTE = 10000' carbon.conf; then
		sed 's/MAX_CREATES_PER_MINUTE = 50/MAX_CREATES_PER_MINUTE = 10000/' <carbon.conf.example >carbon.conf
	fi

	# storage-schemas.conf handled in install, we have a custom one
	# XXX are these necessary?
	cp storage-aggregation.conf.example storage-aggregation.conf
	cp relay-rules.conf.example relay-rules.conf
	cp aggregation-rules.conf.example aggregation-rules.conf

	cat >graphite.wsgi <<EOF
import os
import sys
import site

prev_sys_path = list(sys.path)
sitedir = '/opt/graphite/lib/python{maj}.{min}/site-packages'.format(
	maj=sys.version_info[0], min=sys.version_info[1])
site.addsitedir(sitedir)

# Reorder sys.path so new directories at the front.
new_sys_path = []
for item in list(sys.path):
    if item not in prev_sys_path:
        new_sys_path.append(item)
        sys.path.remove(item)
sys.path[:0] = new_sys_path

EOF
	cat graphite.wsgi.example >> graphite.wsgi
	# init.d/carbon-cache handled in make install
	[ -d /var/log/carbon ] || mkdir /var/log/carbon
	service carbon-cache stop || true
	service carbon-cache start
	cd $d
}

kraken()
{
	service kraken stop || true
	service kraken start
}

case "$1" in
	configure)
		graphite_seed
		graphite
		carbon
		kraken
		calamari
		service apache2 stop || true
		service apache2 start
		;;

	abort-upgrade|abort-remove|abort-deconfigure)
		;;
	*)
		echo "postinst called with unknown argument $1" >&2
		exit 1
		;;
esac

#
# The sort of thing debhelper would add
#
if [ -x /etc/init.d/carbon-cache ] ; then 
	update-rc.d carbon-cache defaults
fi

if [ -x /etc/init.d/kraken ] ; then 
	update-rc.d kraken defaults
fi

exit 0
